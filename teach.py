# We'll generate a 10k casual Bangla/Banglish chat dataset and save it for download.
# We'll also save the generator script so the user can reuse it locally.

import json, random, math, os, itertools, re
from datetime import datetime

random.seed(42)

# --------------------------
# Lexicons and building blocks
# --------------------------

PRONOUNS = ["tui", "tumi", "apni"]
TIME_WORDS = ["sokal", "dupure", "bikal", "raat", "shondha", "aj", "kal", "porshur", "ekhuni", "ekto pore"]
TIME_WORDS_BN = ["‡¶∏‡¶ï‡¶æ‡¶≤", "‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞‡ßá", "‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤", "‡¶∞‡¶æ‡¶§", "‡¶∏‡¶®‡ßç‡¶ß‡ßç‡¶Ø‡¶æ", "‡¶Ü‡¶ú", "‡¶ï‡¶æ‡¶≤", "‡¶™‡¶∞‡¶∂‡ßÅ", "‡¶è‡¶ñ‡¶®‡¶á", "‡¶è‡¶ï‡¶ü‡ßÅ ‡¶™‡¶∞‡ßá"]
EMOJIS = ["üôÇ","üòÖ","üòÇ","ü§î","üôÉ","ü•π","üò¥","üòé","‚ú®","üî•","‚ù§Ô∏è","üëç","üôå","ü§ù","ü§ü","ü§∑‚Äç‚ôÇÔ∏è","ü§∑‚Äç‚ôÄÔ∏è"]
PUNCS = ["?", "?!", "...?", "!!", "?!", "‚Ä¶?"]

# Simple style shifters
def maybe_emoji(s):
    if random.random() < 0.25:
        return s + " " + random.choice(EMOJIS)
    return s

def maybe_punc(s):
    if not s.endswith(tuple("?!")) and random.random() < 0.7:
        return s + random.choice(PUNCS)
    return s

def maybe_lower(s):
    # for Banglish pieces only
    if random.random() < 0.15:
        return s.lower()
    return s

def choice(*args):
    return random.choice(args)

# --------------------------
# Category -> Answer pools
# --------------------------

ANS = {
    "greet": [
        ["hi", "hello", "hey"],
        ["‡¶π‡¶æ‡¶á", "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã", "‡¶ì‡¶π‡ßá"],
        ["hello hello", "hey there", "yo"],
        ["‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã?", "‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡¶ø", "‡¶§‡ßÅ‡¶Æ‡¶ø?"]
    ],
    "wellbeing": [
        ["‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡¶ø", "‡¶Æ‡ßã‡¶ü‡¶æ‡¶Æ‡ßÅ‡¶ü‡¶ø", "‡¶Ü‡¶ú‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡ßÅ tired"],
        ["bhalo", "valo achi", "onak bhalo vibe"],
        ["alhamdulillah bhalo", "good good", "you tell"],
        ["‡¶ö‡¶≤‡¶õ‡ßá", "‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú ‡¶π‡¶ö‡ßç‡¶õ‡ßá", "‡¶§‡ßÅ‡¶á ‡¶ï‡ßá‡¶Æ‡¶®?"]
    ],
    "where": [
        ["‡¶¨‡¶æ‡ßú‡¶ø‡¶§‡ßá", "‡¶¢‡¶æ‡¶ï‡¶æ‡ßü", "‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ‡ßü"],
        ["home e", "office e", "campus e"],
        ["road e", "bus e", "class e"],
        ["‡¶Æ‡¶æ‡ßü‡ßá‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá", "‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶∞ ‡¶¨‡¶æ‡¶∏‡¶æ‡ßü", "‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡¶ø"]
    ],
    "doing": [
        ["class e", "kaj kortesi", "khali chill"],
        ["‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø", "‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø", "‡¶∏‡¶ø‡¶∞‡¶ø‡¶ú ‡¶¶‡ßá‡¶ñ‡¶õ‡¶ø"],
        ["meeting e", "assignment likhtesi", "game khelchi"],
        ["bashe boshe asi", "walk dite gesi", "drive kortesi"]
    ],
    "plan_invite": [
        ["hobe", "sure", "cholo jabo"],
        ["parbo na", "next time", "dekhi kal"],
        ["ok", "confirm korbo", "maybe"],
        ["‡¶ú‡¶æ‡ßü", "‡¶Ø‡¶æ‡¶á", "‡¶ö‡¶≤‡ßã ‡¶Ø‡¶æ‡¶á"]
    ],
    "time": [
        ["ekhon", "koyta baje bolo", "thik bujhlam na"],
        ["‡¶è‡¶ñ‡¶®", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£ ‡¶™‡¶∞‡ßá", "‡¶∞‡¶æ‡¶§‡ßá"],
        ["9 ta hobe", "shondhay beshi hoy", "kal notun kore dekhbo"],
        ["ok", "thik ache", "note korlam"]
    ],
    "meet": [
        ["chole asho", "map pathacchi", "wait korbo"],
        ["parbo na", "porer din", "kal jodi hoy"],
        ["tikache", "see you", "on my way"],
        ["‡¶Ü‡¶∏‡¶õ‡¶ø", "‡¶™‡ßå‡¶Å‡¶õ‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø", "‡¶ó‡ßá‡¶ü‡ßá ‡¶Ü‡¶õ‡¶ø"]
    ],
    "food": [
        ["‡¶ö‡¶≤ ‡¶ñ‡¶æ‡¶á", "biriyani?", "burger?"],
        ["khawa sesh", "coffee lagbe", "cha dibo"],
        ["‡¶¨‡¶æ‡¶∏‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞", "‡¶ï‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶ü‡¶ø‡¶®", "street food"],
        ["ranna korchi", "hungry", "‡¶°‡¶æ‡ßü‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá‡¶õ‡¶ø"]
    ],
    "ent": [
        ["movie?", "ott te ki ache", "series recommend kor"],
        ["game on", "valo lobby", "rank push?"],
        ["gaan shunbo", "concert jabo?", "reel banabi"],
        ["‡¶π‡¶≤ ‡¶è ‡¶Ø‡¶æ‡¶¨‡ßã", "‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü ‡¶™‡¶æ‡¶á‡¶≤‡ßá ‡¶Ø‡¶æ‡¶á", "late show"]
    ],
    "weather": [
        ["‡¶¨‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶™‡ßú‡¶õ‡ßá", "‡¶ó‡¶∞‡¶Æ", "‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶≠‡¶æ‡¶≤‡ßã"],
        ["rainy", "onak heat", "cool hoyeche"],
        ["‡¶Ü‡¶ú storm ashte pare", "umbrella nao", "‡¶≠‡¶ø‡¶ú‡ßá ‡¶ó‡ßá‡¶≤‡ßá call dio"],
        ["ac on korchi", "outside jabo na", "meh"]
    ],
    "net_power": [
        ["loadshedding", "net slow", "router reboot diya"],
        ["light gelo", "pc off", "backup on"],
        ["wifi thik ache", "mobile data e ashi", "hotspot dibo"],
        ["‡¶Ü‡¶∏‡ßá", "‡¶®‡ßá‡¶á", "‡¶¶‡ßá‡¶ñ‡¶ø ‡¶ï‡¶ø ‡¶π‡ßü"]
    ],
    "thanks": [
        ["thanks", "thank you", "‡¶∂‡ßÅ‡¶ï‡¶∞‡¶ø‡ßü‡¶æ"],
        ["onak dhonnobad", "appreciate it", "valo laglo"],
        ["‚ù§Ô∏è", "üôè", "‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ ‡¶≠‡¶æ‡¶á"],
        ["means a lot", "saved me", "legend"]
    ],
    "apology": [
        ["sorry", "bhul hoye gese", "amar doss"],
        ["‡¶ï‡ßç‡¶∑‡¶Æ‡¶æ ‡¶ï‡¶∞", "‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§", "‡¶Ü‡¶∞ ‡¶π‡¶¨‡ßá ‡¶®‡¶æ"],
        ["late hoye gesi", "traffic chilo", "bolo ki kora lagbe"],
        ["next time careful thakbo", "noted", "my bad"]
    ],
}

def sample_answers(cat, k=None):
    pool = random.choice(ANS.get(cat, [["ok"]]))
    # expand small variations
    out = list(dict.fromkeys(pool))  # unique preserve order
    # Maybe add another pool amalgam
    if random.random() < 0.35:
        out.extend(random.choice(ANS.get(cat, [["ok"]]))[:2])
    # Trim or extend
    if k is None:
        k = random.randint(3, 6)
    random.shuffle(out)
    return out[:k]

# --------------------------
# Ask template factories
# We'll create > 300 unique asks across categories (Bangla + Banglish)
# --------------------------

ASK_BANK = []

def add(cat, texts):
    for t in texts:
        ASK_BANK.append((cat, t))

# Greeting
add("greet", [
    "hi", "hello", "hey", "hie", "yoo", "hey there",
    "‡¶π‡¶æ‡¶á", "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã", "‡¶ì‡¶á", "‡¶ï‡¶ø ‡¶ñ‡¶¨‡¶∞", "‡¶∂‡ßÅ‡¶®‡¶õ‡ßã", "‡¶Ü‡¶∞‡ßá", "‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã",
])
# Wellbeing inquiries
add("wellbeing", [
    "kemon acho", "kemon aso", "valo aso?", "bhalo aso?",
    "‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã", "‡¶ï‡¶ø ‡¶ñ‡¶¨‡¶∞", "‡¶≠‡¶æ‡¶≤‡ßã ‡¶§‡ßã", "‡¶∏‡¶¨ ‡¶†‡¶ø‡¶ï‡¶†‡¶æ‡¶ï?", "‡¶Ü‡¶ú ‡¶ï‡ßá‡¶Æ‡¶® ‡¶≤‡¶æ‡¶ó‡¶õ‡ßá",
])
# Where
add("where", [
    "tui koi", "koi aso", "kothay", "kothay acho", "kothay asho",
    "‡¶ï‡ßã‡¶•‡¶æ‡ßü", "‡¶§‡ßÅ‡¶á ‡¶ï‡ßã‡¶•‡¶æ‡ßü", "‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶Ü‡¶õ‡ßã", "‡¶è‡¶ñ‡¶® ‡¶ï‡ßã‡¶•‡¶æ‡ßü", "‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶õ‡¶ø‡¶≤‡ßá",
])
# Doing now
add("doing", [
    "ki korcho", "ki korsos", "ki korteso", "ki korsis",
    "‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡ßã", "‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø‡¶≤‡ßá", "‡¶è‡¶ñ‡¶® ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡ßã", "busy naki", "free acho",
])
# Plans / invites
add("plan_invite", [
    "ber hobo?", "coffee jabi?", "cha khabi?", "ghurte jabi?",
    "movie jabi?", "game khelbi?", "meet korbo?", "call dibo?",
    "‡¶¶‡ßá‡¶ñ‡¶æ ‡¶π‡¶¨‡ßá?", "‡¶ö‡¶æ ‡¶ñ‡¶æ‡¶á?", "‡¶Ü‡¶ú ‡¶¨‡ßá‡¶∞‡ßÅ‡¶¨‡¶æ?", "‡¶è‡¶ï‡¶ü‡ßÅ ‡¶Ü‡¶â‡¶ü ‡¶π‡¶á",
])
# Time / when
add("time", [
    "kobe ashbi", "kobe free", "koytay start", "koyta baje", "aj kobe",
    "‡¶ï‡¶ñ‡¶® ‡¶Ü‡¶∏‡¶¨‡ßá", "‡¶ï‡¶§ ‡¶ü‡¶æ‡ßü", "‡¶Ü‡¶ú ‡¶ï‡ßü‡¶ü‡¶æ", "‡¶ï‡¶ñ‡¶® ‡¶∏‡¶Æ‡ßü ‡¶™‡¶æ‡¶¨‡¶ø", "‡¶ü‡¶æ‡¶á‡¶Æ ‡¶¶‡¶ø‡¶¨‡¶ø",
])
# Meeting / location
add("meet", [
    "kothay meet", "place confirm", "map patha", "gate e asho",
    "jibon tower e?", "uttara sector 4?", "dukan er samne", "campus gate?",
    "‡¶ó‡ßá‡¶ü‡ßá ‡¶Ü‡¶∏‡ßã", "‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡¶ø ‡¶∏‡¶æ‡¶Æ‡¶®‡ßá‡¶∞ ‡¶¨‡ßá‡¶û‡ßç‡¶ö‡ßá", "‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶¶‡ßá‡¶ñ‡¶æ",
])
# Food
add("food", [
    "khawa ki", "khawa ki hobe", "vaja khabi?", "biriyani cholbe?",
    "burger naki pizza", "‡¶¨‡¶æ‡¶∏‡¶æ‡ßü ‡¶ñ‡¶æ‡¶á‡¶õ‡ßã?", "‡¶´‡ßÅ‡¶ö‡¶ï‡¶æ ‡¶ñ‡¶æ‡¶¨‡¶ø?", "‡¶°‡¶æ‡ßü‡ßá‡¶ü ‡¶ö‡¶≤‡¶ø?",
])
# Entertainment
add("ent", [
    "movie dekhbi?", "series suggest kor", "game khelbi?", "rank push?",
    "gaan shunbi?", "concert jabi?", "reel banabi?", "ott e ki ache",
    "‡¶π‡¶≤ ‡¶è ‡¶Ø‡¶æ‡¶¨‡¶ø?", "‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü ‡¶™‡¶æ‡¶¨‡ßã?", "‡¶≤‡¶æ‡¶∏‡ßç‡¶ü ‡¶∂‡ßã ‡¶®‡¶æ‡¶ï‡¶ø ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø‡¶®‡¶ø",
])
# Weather
add("weather", [
    "brishti porbe?", "aj brishti?", "onek gorom", "thanda lagche",
    "‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶ï‡ßá‡¶Æ‡¶®", "‡¶¨‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶π‡¶¨‡ßá?", "‡¶ó‡¶∞‡¶Æ ‡¶™‡ßú‡¶õ‡ßá", "‡¶ï‡ßÅ‡ßü‡¶æ‡¶∂‡¶æ ‡¶™‡ßú‡¶¨‡ßá?",
])
# Network / power
add("net_power", [
    "net kacche", "wifi chole?", "router restart korbi?", "net slow",
    "light gelo?", "loadshedding?", "charge koita%", "battery down",
    "‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡ßÅ‡ßé ‡¶Ü‡¶õ‡ßá?", "‡¶®‡ßá‡¶ü ‡¶ï‡ßá‡¶Æ‡¶®", "‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶®‡ßá‡¶ü ‡¶®‡¶æ‡¶á",
])
# Thanks / apology
add("thanks", [
    "thanks", "thank you", "‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶", "‡¶Ö‡¶®‡ßá‡¶ï ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶", "appreciate it",
])
add("apology", [
    "sorry", "doya kore maf", "‡¶≠‡ßÅ‡¶≤ ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶õ‡ßá", "‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§", "my bad",
])

# Programmatic expansion to exceed 200 unique asks
# We'll generate combinations of pronouns/time/context for several categories
def expand_pronoun(patterns_bn, patterns_en, cat):
    for p in patterns_en:
        for pr in PRONOUNS:
            add(cat, p.replace("{you}", pr))
    for p in patterns_bn:
        add(cat, p)

expand_pronoun(
    patterns_bn=[
        "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡ßã", "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã", "‡¶Ü‡¶ú ‡¶ï‡ßÄ ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶®", "‡¶Ü‡¶ú ‡¶ï‡ßã‡¶•‡¶æ‡ßü",
        "‡¶ï‡¶ñ‡¶® ‡¶Ü‡¶∏‡¶¨‡ßá", "‡¶ö‡¶≤‡ßã ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶ï‡¶∞‡¶ø", "‡¶ö‡¶æ ‡¶ñ‡ßá‡¶§‡ßá ‡¶Ø‡¶æ‡¶¨‡¶æ", "‡¶è‡¶ñ‡¶® ‡¶´‡ßç‡¶∞‡¶ø ‡¶®‡¶æ‡¶ï‡¶ø",
        "‡¶ï‡¶æ‡¶ú ‡¶ï‡ßá‡¶Æ‡¶® ‡¶ö‡¶≤‡¶õ‡ßá", "‡¶Æ‡¶® ‡¶ï‡ßá‡¶Æ‡¶®", "‡¶ò‡ßÅ‡¶Æ ‡¶•‡ßá‡¶ï‡ßá ‡¶â‡¶†‡ßá‡¶õ‡ßã?", "‡¶¨‡¶æ‡¶∏‡¶æ‡ßü ‡¶Ü‡¶õ‡ßã?",
    ],
    patterns_en=[
        "{you} ki obostha", "{you} kothay", "{you} aj ki korbi",
        "{you} kal free naki", "{you} ki khawabi", "{you} khelbi aj",
        "{you} school jachho?", "{you} office e naki", "{you} raat e time dibi",
        "{you} call nibi", "{you} msg korbi?",
    ],
    cat="mixed"
)

# Dynamic builders (templates with time words)
for tw in TIME_WORDS:
    add("time", f"{tw} kobe ashbi")
    add("doing", f"{tw} ki korcho")
    add("plan_invite", f"{tw} ber hobo")
    add("where", f"{tw} kothay thakbi")

for tw in TIME_WORDS_BN:
    add("time", f"{tw} ‡¶ï‡¶ñ‡¶® ‡¶Ü‡¶∏‡¶¨‡¶ø")
    add("doing", f"{tw} ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø‡¶∏")
    add("plan_invite", f"{tw} ‡¶¨‡ßá‡¶∞ ‡¶π‡¶¨‡ßã")
    add("where", f"{tw} ‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶•‡¶æ‡¶ï‡¶¨‡¶ø")

# More topical categories (study/work/health/transport/shopping/sports)
add("study", [
    "assignment sesh?", "report likhso?", "exam kemon holo", "lab ache?",
    "read korbi?", "group study korbo?", "sir class niben?", "quiz hobe?",
    "‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶ï‡¶¨‡ßá", "‡¶™‡ßç‡¶∞‡ßá‡¶ú‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∂‡¶® ‡¶¨‡¶æ‡¶®‡¶æ‡¶á‡¶õ‡ßã?", "‡¶®‡ßã‡¶ü ‡¶¶‡¶ø‡¶¨‡¶ø?"
])
ANS["study"] = [
    ["sesh", "ekto baki", "rat e korbo"],
    ["‡¶Ü‡¶ú hobe", "sir bolse cancel", "quiz tough"],
    ["note dibo", "drive e rekhechi", "inbox check"],
    ["‡¶≠‡¶æ‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá", "‡¶™‡¶æ‡¶∏ ‡¶ï‡¶∞‡¶õ‡¶ø", "next bar better"]
]

add("work", [
    "standup koi tay", "deadline ase", "jira ticket niye kaj", "meeting ache?",
    "leave niteso?", "office jachho?", "remote naki onsite", "salary elo?",
    "‡¶ï‡¶æ‡¶ú ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡ßá?", "‡¶¨‡¶∏ ‡¶°‡ßá‡¶ï‡ßá‡¶õ‡ßá?", "‡¶™‡ßá-‡¶∏‡ßç‡¶≤‡¶ø‡¶™ ‡¶™‡¶æ‡¶á‡¶õ‡ßã?"
])
ANS["work"] = [
    ["meeting e", "later ping", "calendar inv sent"],
    ["deadline kal", "extend hobe", "done almost"],
    ["leave nilam", "onsite aj", "wfh"],
    ["salary paisi", "ek dui diner moddhe", "HR e mail"]
]

add("health", [
    "mon bhalo?", "cold lagse?", "jhor?", "fever ase?", " ‡¶Æ‡¶æ‡¶•‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶•‡¶æ?",
    "doctor dekhaso?", "‡¶∂‡¶∞‡ßÄ‡¶∞ ‡¶ï‡ßá‡¶Æ‡¶®", "‡¶ò‡ßÅ‡¶Æ ‡¶π‡¶á‡¶õ‡ßá?", "gym jabi?",
])
ANS["health"] = [
    ["bhalo", "ekto cold", "med nitesi"],
    ["fever chilo", "ekhon kom", "rest nitesi"],
    ["gym jabo", "aj skip", "kal chest"],
    ["‡¶ò‡ßÅ‡¶Æ ‡¶ï‡¶Æ", "‡¶ü‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶Æ‡¶æ‡¶§‡ßá ‡¶π‡¶¨‡ßá", "‡¶™‡¶æ‡¶®‡¶ø ‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø"]
]

add("transport", [
    "uber dhorte parbi?", "bus pabi?", "train kobe", "flight koto tay",
    "jam koto", "traffic onek", "bike e jabi?", "rickshaw nibi?",
    "‡¶ó‡¶æ‡ßú‡¶ø ‡¶Ü‡¶õ‡ßá?", "‡¶∏‡¶ø‡¶è‡¶®‡¶ú‡¶ø ‡¶ß‡¶∞‡¶¨‡¶ø?", "‡¶¨‡¶æ‡¶∏‡¶æ‡ßü ‡¶®‡¶ø‡¶§‡ßá ‡¶Ü‡¶∏‡¶¨‡¶æ?"
])
ANS["transport"] = [
    ["uber peye gelam", "path nilam", "aschi"],
    ["bus e", "jam onek", "late hobe"],
    ["bike e jachi", "rickshaw dilam", "foot e aschi"],
    ["landing 8 ta", "train 6:30", "flight delay"]
]

add("shopping", [
    "bazaar jabi?", "kisu kinbi?", "sale chalche?", "shohag store e jabi?",
    "dress nibo", "shoe lagbe", "gift nibo", "book fair jabi?",
    "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶®‡¶æ‡¶ï‡¶ø ‡¶¶‡ßã‡¶ï‡¶æ‡¶®", "‡¶ï‡ßÅ‡¶™‡¶® ‡¶Ü‡¶õ‡ßá?", "‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ï‡¶¨‡ßá"
])
ANS["shopping"] = [
    ["online e", "store visit", "compare kortesi"],
    ["cash on", "bkash", "card"],
    ["kal delivery", "same day", "pick up korbo"],
    ["coupon paisi", "no coupon", "price komano jay"]
]

add("sports", [
    "match dekhli?", "gelam stadium?", "cricket kemon holo", "football aj",
    "messi goal dil?", "bd jitse?", "ipl dekhbi?", "practice korbi?",
    "‡¶ú‡¶ø‡¶Æ‡ßá ‡¶ú‡¶æ‡¶∏?", "‡¶ï‡ßã‡¶ö ‡¶°‡¶æ‡¶ï‡¶õ‡ßá?", "‡¶∏‡ßç‡¶ï‡ßã‡¶∞ ‡¶ï‡¶§‡ßã"
])
ANS["sports"] = [
    ["jitse", "hariye gelo", "draw"],
    ["awesome match", "boring chilo", "last over e"],
    ["score 2-1", "century hoyeche", "penalty diye jitse"],
    ["practice kal", "aj rest", "coach happy"]
]

# Count uniqueness
ASK_BANK = list(dict.fromkeys(ASK_BANK))  # unique
ask_count = len(ASK_BANK)

# Ensure we have > 200
assert ask_count >= 200, f"Need 200+, have {ask_count}"

# --------------------------
# Generators
# --------------------------

def bangla_or_banglish(s):
    # Heuristic: if contains Bangla chars, keep; else maybe random lower + minor spelling
    if re.search(r"[\u0980-\u09FF]", s):
        return s
    # Random stylings for Banglish
    s = maybe_lower(s)
    # small chance to replace 'bh' with 'b' or 'v'
    if random.random() < 0.2:
        s = s.replace("bh", random.choice(["b","v"]))
    if random.random() < 0.15:
        s = s.replace("th", "t")
    if random.random() < 0.1:
        s = s.replace("ee", "i")
    return s

def make_ask(cat, text):
    t = text
    if not t.endswith(tuple("?!‡•§")):
        t = maybe_punc(t)
    t = maybe_emoji(t)
    t = bangla_or_banglish(t)
    return t

def make_pair():
    cat, text = random.choice(ASK_BANK)
    ask = make_ask(cat, text)
    ans = sample_answers(cat)
    # sprinkle emojis/punctuation in answers
    out = []
    seen = set()
    for a in ans:
        a = bangla_or_banglish(a)
        if random.random() < 0.25:
            a = maybe_punc(a)
        if random.random() < 0.25:
            a = maybe_emoji(a)
        if a not in seen:
            out.append(a)
            seen.add(a)
    # Ensure 3+ answers
    while len(out) < 3:
        out.append("ok")
    return {"ask": ask, "ans": out}

def generate(path, n=10000, as_array=False):
    count = 0
    if as_array:
        with open(path, "w", encoding="utf-8") as f:
            f.write("[")
            for i in range(n):
                obj = make_pair()
                if i > 0:
                    f.write(",")
                f.write(json.dumps(obj, ensure_ascii=False))
                count += 1
            f.write("]")
    else:
        with open(path, "w", encoding="utf-8") as f:
            for i in range(n):
                obj = make_pair()
                f.write(json.dumps(obj, ensure_ascii=False) + "\n")
                count += 1
    return count

# --------------------------
# Produce 10k sample now
# --------------------------

out_jsonl = "chat_pairs_10k.jsonl"
out_json = "chat_pairs_2k.json"  # smaller array version for quick view
generated = generate(out_jsonl, n=10_000, as_array=False)
generated2 = generate(out_json, n=2_000, as_array=True)

# Save the generator script too
script_path = "chat_dataset_generator.py"
with open(script_path, "w", encoding="utf-8") as sf:
    sf.write(r'''# -*- coding: utf-8 -*-
# Chat dataset generator (Bangla + Banglish)
# Usage:
#   python chat_dataset_generator.py --out chat_pairs.jsonl --n 1000000
import json, random, re, argparse

random.seed(42)

PRONOUNS = ["tui", "tumi", "apni"]
TIME_WORDS = ["sokal", "dupure", "bikal", "raat", "shondha", "aj", "kal", "porshur", "ekhuni", "ekto pore"]
TIME_WORDS_BN = ["‡¶∏‡¶ï‡¶æ‡¶≤", "‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞‡ßá", "‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤", "‡¶∞‡¶æ‡¶§", "‡¶∏‡¶®‡ßç‡¶ß‡ßç‡¶Ø‡¶æ", "‡¶Ü‡¶ú", "‡¶ï‡¶æ‡¶≤", "‡¶™‡¶∞‡¶∂‡ßÅ", "‡¶è‡¶ñ‡¶®‡¶á", "‡¶è‡¶ï‡¶ü‡ßÅ ‡¶™‡¶∞‡ßá"]
EMOJIS = ["üôÇ","üòÖ","üòÇ","ü§î","üôÉ","ü•π","üò¥","üòé","‚ú®","üî•","‚ù§Ô∏è","üëç","üôå","ü§ù","ü§ü","ü§∑‚Äç‚ôÇÔ∏è","ü§∑‚Äç‚ôÄÔ∏è"]
PUNCS = ["?", "?!", "...?", "!!", "?!", "‚Ä¶?"]

def maybe_emoji(s):
    import random
    if random.random() < 0.25:
        return s + " " + random.choice(EMOJIS)
    return s

def maybe_punc(s):
    import random
    if not s.endswith(tuple("?!")) and random.random() < 0.7:
        return s + random.choice(PUNCS)
    return s

def maybe_lower(s):
    import random
    if random.random() < 0.15:
        return s.lower()
    return s

def bangla_or_banglish(s):
    import re, random
    if re.search(r"[\\u0980-\\u09FF]", s):
        return s
    s = maybe_lower(s)
    if random.random() < 0.2:
        s = s.replace("bh", random.choice(["b","v"]))
    if random.random() < 0.15:
        s = s.replace("th", "t")
    if random.random() < 0.1:
        s = s.replace("ee", "i")
    return s

ANS = {
    "greet": [
        ["hi", "hello", "hey"],
        ["‡¶π‡¶æ‡¶á", "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã", "‡¶ì‡¶π‡ßá"],
        ["hello hello", "hey there", "yo"],
        ["‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã?", "‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡¶ø", "‡¶§‡ßÅ‡¶Æ‡¶ø?"]
    ],
    "wellbeing": [
        ["‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡¶ø", "‡¶Æ‡ßã‡¶ü‡¶æ‡¶Æ‡ßÅ‡¶ü‡¶ø", "‡¶Ü‡¶ú‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡ßÅ tired"],
        ["bhalo", "valo achi", "onak bhalo vibe"],
        ["alhamdulillah bhalo", "good good", "you tell"],
        ["‡¶ö‡¶≤‡¶õ‡ßá", "‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú ‡¶π‡¶ö‡ßç‡¶õ‡ßá", "‡¶§‡ßÅ‡¶á ‡¶ï‡ßá‡¶Æ‡¶®?"]
    ],
    "where": [
        ["‡¶¨‡¶æ‡ßú‡¶ø‡¶§‡ßá", "‡¶¢‡¶æ‡¶ï‡¶æ‡ßü", "‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ‡ßü"],
        ["home e", "office e", "campus e"],
        ["road e", "bus e", "class e"],
        ["‡¶Æ‡¶æ‡ßü‡ßá‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá", "‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶∞ ‡¶¨‡¶æ‡¶∏‡¶æ‡ßü", "‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡¶ø"]
    ],
    "doing": [
        ["class e", "kaj kortesi", "khali chill"],
        ["‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø", "‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø", "‡¶∏‡¶ø‡¶∞‡¶ø‡¶ú ‡¶¶‡ßá‡¶ñ‡¶õ‡¶ø"],
        ["meeting e", "assignment likhtesi", "game khelchi"],
        ["bashe boshe asi", "walk dite gesi", "drive kortesi"]
    ],
    "plan_invite": [
        ["hobe", "sure", "cholo jabo"],
        ["parbo na", "next time", "dekhi kal"],
        ["ok", "confirm korbo", "maybe"],
        ["‡¶ú‡¶æ‡ßü", "‡¶Ø‡¶æ‡¶á", "‡¶ö‡¶≤‡ßã ‡¶Ø‡¶æ‡¶á"]
    ],
    "time": [
        ["ekhon", "koyta baje bolo", "thik bujhlam na"],
        ["‡¶è‡¶ñ‡¶®", "‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£ ‡¶™‡¶∞‡ßá", "‡¶∞‡¶æ‡¶§‡ßá"],
        ["9 ta hobe", "shondhay beshi hoy", "kal notun kore dekhbo"],
        ["ok", "thik ache", "note korlam"]
    ],
    "meet": [
        ["chole asho", "map pathacchi", "wait korbo"],
        ["parbo na", "porer din", "kal jodi hoy"],
        ["tikache", "see you", "on my way"],
        ["‡¶Ü‡¶∏‡¶õ‡¶ø", "‡¶™‡ßå‡¶Å‡¶õ‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø", "‡¶ó‡ßá‡¶ü‡ßá ‡¶Ü‡¶õ‡¶ø"]
    ],
    "food": [
        ["‡¶ö‡¶≤ ‡¶ñ‡¶æ‡¶á", "biriyani?", "burger?"],
        ["khawa sesh", "coffee lagbe", "cha dibo"],
        ["‡¶¨‡¶æ‡¶∏‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞", "‡¶ï‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶ü‡¶ø‡¶®", "street food"],
        ["ranna korchi", "hungry", "‡¶°‡¶æ‡ßü‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá‡¶õ‡¶ø"]
    ],
    "ent": [
        ["movie?", "ott te ki ache", "series recommend kor"],
        ["game on", "valo lobby", "rank push?"],
        ["gaan shunbo", "concert jabo?", "reel banabi"],
        ["‡¶π‡¶≤ ‡¶è ‡¶Ø‡¶æ‡¶¨‡ßã", "‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü ‡¶™‡¶æ‡¶á‡¶≤‡ßá ‡¶Ø‡¶æ‡¶á", "late show"]
    ],
    "weather": [
        ["‡¶¨‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶™‡ßú‡¶õ‡ßá", "‡¶ó‡¶∞‡¶Æ", "‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶≠‡¶æ‡¶≤‡ßã"],
        ["rainy", "onak heat", "cool hoyeche"],
        ["‡¶Ü‡¶ú storm ashte pare", "umbrella nao", "‡¶≠‡¶ø‡¶ú‡ßá ‡¶ó‡ßá‡¶≤‡ßá call dio"],
        ["ac on korchi", "outside jabo na", "meh"]
    ],
    "net_power": [
        ["loadshedding", "net slow", "router reboot diya"],
        ["light gelo", "pc off", "backup on"],
        ["wifi thik ache", "mobile data e ashi", "hotspot dibo"],
        ["‡¶Ü‡¶∏‡ßá", "‡¶®‡ßá‡¶á", "‡¶¶‡ßá‡¶ñ‡¶ø ‡¶ï‡¶ø ‡¶π‡ßü"]
    ],
    "thanks": [
        ["thanks", "thank you", "‡¶∂‡ßÅ‡¶ï‡¶∞‡¶ø‡ßü‡¶æ"],
        ["onak dhonnobad", "appreciate it", "valo laglo"],
        ["‚ù§Ô∏è", "üôè", "‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ ‡¶≠‡¶æ‡¶á"],
        ["means a lot", "saved me", "legend"]
    ],
    "apology": [
        ["sorry", "bhul hoye gese", "amar doss"],
        ["‡¶ï‡ßç‡¶∑‡¶Æ‡¶æ ‡¶ï‡¶∞", "‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§", "‡¶Ü‡¶∞ ‡¶π‡¶¨‡ßá ‡¶®‡¶æ"],
        ["late hoye gesi", "traffic chilo", "bolo ki kora lagbe"],
        ["next time careful thakbo", "noted", "my bad"]
    ],
    "study": [
        ["sesh", "ekto baki", "rat e korbo"],
        ["‡¶Ü‡¶ú hobe", "sir bolse cancel", "quiz tough"],
        ["note dibo", "drive e rekhechi", "inbox check"],
        ["‡¶≠‡¶æ‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá", "‡¶™‡¶æ‡¶∏ ‡¶ï‡¶∞‡¶õ‡¶ø", "next bar better"]
    ],
    "work": [
        ["meeting e", "later ping", "calendar inv sent"],
        ["deadline kal", "extend hobe", "done almost"],
        ["leave nilam", "onsite aj", "wfh"],
        ["salary paisi", "ek dui diner moddhe", "HR e mail"]
    ],
    "health": [
        ["bhalo", "ekto cold", "med nitesi"],
        ["fever chilo", "ekhon kom", "rest nitesi"],
        ["gym jabo", "aj skip", "kal chest"],
        ["‡¶ò‡ßÅ‡¶Æ ‡¶ï‡¶Æ", "‡¶ü‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶Æ‡¶æ‡¶§‡ßá ‡¶π‡¶¨‡ßá", "‡¶™‡¶æ‡¶®‡¶ø ‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø"]
    ],
    "transport": [
        ["uber peye gelam", "path nilam", "aschi"],
        ["bus e", "jam onek", "late hobe"],
        ["bike e jachi", "rickshaw dilam", "foot e aschi"],
        ["landing 8 ta", "train 6:30", "flight delay"]
    ],
    "shopping": [
        ["online e", "store visit", "compare kortesi"],
        ["cash on", "bkash", "card"],
        ["kal delivery", "same day", "pick up korbo"],
        ["coupon paisi", "no coupon", "price komano jay"]
    ],
    "sports": [
        ["jitse", "hariye gelo", "draw"],
        ["awesome match", "boring chilo", "last over e"],
        ["score 2-1", "century hoyeche", "penalty diye jitse"],
        ["practice kal", "aj rest", "coach happy"]
    ]
}

ASK_BANK = []
def add(cat, texts):
    for t in texts:
        ASK_BANK.append((cat, t))

add("greet", ["hi","hello","hey","hie","yoo","hey there","‡¶π‡¶æ‡¶á","‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã","‡¶ì‡¶á","‡¶ï‡¶ø ‡¶ñ‡¶¨‡¶∞","‡¶∂‡ßÅ‡¶®‡¶õ‡ßã","‡¶Ü‡¶∞‡ßá","‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã"])
add("wellbeing", ["kemon acho","kemon aso","valo aso?","bhalo aso?","‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã","‡¶ï‡¶ø ‡¶ñ‡¶¨‡¶∞","‡¶≠‡¶æ‡¶≤‡ßã ‡¶§‡ßã","‡¶∏‡¶¨ ‡¶†‡¶ø‡¶ï‡¶†‡¶æ‡¶ï?","‡¶Ü‡¶ú ‡¶ï‡ßá‡¶Æ‡¶® ‡¶≤‡¶æ‡¶ó‡¶õ‡ßá"])
add("where", ["tui koi","koi aso","kothay","kothay acho","kothay asho","‡¶ï‡ßã‡¶•‡¶æ‡ßü","‡¶§‡ßÅ‡¶á ‡¶ï‡ßã‡¶•‡¶æ‡ßü","‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶Ü‡¶õ‡ßã","‡¶è‡¶ñ‡¶® ‡¶ï‡ßã‡¶•‡¶æ‡ßü","‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶õ‡¶ø‡¶≤‡ßá"])
add("doing", ["ki korcho","ki korsos","ki korteso","ki korsis","‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡ßã","‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø‡¶≤‡ßá","‡¶è‡¶ñ‡¶® ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡ßã","busy naki","free acho"])
add("plan_invite", ["ber hobo?","coffee jabi?","cha khabi?","ghurte jabi?","movie jabi?","game khelbi?","meet korbo?","call dibo?","‡¶¶‡ßá‡¶ñ‡¶æ ‡¶π‡¶¨‡ßá?","‡¶ö‡¶æ ‡¶ñ‡¶æ‡¶á?","‡¶Ü‡¶ú ‡¶¨‡ßá‡¶∞‡ßÅ‡¶¨‡¶æ?","‡¶è‡¶ï‡¶ü‡ßÅ ‡¶Ü‡¶â‡¶ü ‡¶π‡¶á"])
add("time", ["kobe ashbi","kobe free","koytay start","koyta baje","aj kobe","‡¶ï‡¶ñ‡¶® ‡¶Ü‡¶∏‡¶¨‡ßá","‡¶ï‡¶§ ‡¶ü‡¶æ‡ßü","‡¶Ü‡¶ú ‡¶ï‡ßü‡¶ü‡¶æ","‡¶ï‡¶ñ‡¶® ‡¶∏‡¶Æ‡ßü ‡¶™‡¶æ‡¶¨‡¶ø","‡¶ü‡¶æ‡¶á‡¶Æ ‡¶¶‡¶ø‡¶¨‡¶ø"])
add("meet", ["kothay meet","place confirm","map patha","gate e asho","jibon tower e?","uttara sector 4?","dukan er samne","campus gate?","‡¶ó‡ßá‡¶ü‡ßá ‡¶Ü‡¶∏‡ßã","‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡¶ø ‡¶∏‡¶æ‡¶Æ‡¶®‡ßá‡¶∞ ‡¶¨‡ßá‡¶û‡ßç‡¶ö‡ßá","‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶¶‡ßá‡¶ñ‡¶æ"])
add("food", ["khawa ki","khawa ki hobe","vaja khabi?","biriyani cholbe?","burger naki pizza","‡¶¨‡¶æ‡¶∏‡¶æ‡ßü ‡¶ñ‡¶æ‡¶á‡¶õ‡ßã?","‡¶´‡ßÅ‡¶ö‡¶ï‡¶æ ‡¶ñ‡¶æ‡¶¨‡¶ø?","‡¶°‡¶æ‡ßü‡ßá‡¶ü ‡¶ö‡¶≤‡¶ø?"])
add("ent", ["movie dekhbi?","series suggest kor","game khelbi?","rank push?","gaan shunbi?","concert jabi?","reel banabi?","ott e ki ache","‡¶π‡¶≤ ‡¶è ‡¶Ø‡¶æ‡¶¨‡¶ø?","‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü ‡¶™‡¶æ‡¶¨‡ßã?","‡¶≤‡¶æ‡¶∏‡ßç‡¶ü ‡¶∂‡ßã ‡¶®‡¶æ‡¶ï‡¶ø ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø‡¶®‡¶ø"])
add("weather", ["brishti porbe?","aj brishti?","onek gorom","thanda lagche","‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶ï‡ßá‡¶Æ‡¶®","‡¶¨‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø ‡¶π‡¶¨‡ßá?","‡¶ó‡¶∞‡¶Æ ‡¶™‡ßú‡¶õ‡ßá","‡¶ï‡ßÅ‡ßü‡¶æ‡¶∂‡¶æ ‡¶™‡ßú‡¶¨‡ßá?"])
add("net_power", ["net kacche","wifi chole?","router restart korbi?","net slow","light gelo?","loadshedding?","charge koita%","battery down","‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡ßÅ‡ßé ‡¶Ü‡¶õ‡ßá?","‡¶®‡ßá‡¶ü ‡¶ï‡ßá‡¶Æ‡¶®","‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶®‡ßá‡¶ü ‡¶®‡¶æ‡¶á"])
add("thanks", ["thanks","thank you","‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶","‡¶Ö‡¶®‡ßá‡¶ï ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶","appreciate it"])
add("apology", ["sorry","doya kore maf","‡¶≠‡ßÅ‡¶≤ ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶õ‡ßá","‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§","my bad"])

def expand_pronoun(patterns_bn, patterns_en, cat):
    for p in patterns_en:
        for pr in PRONOUNS:
            add(cat, p.replace("{you}", pr))
    for p in patterns_bn:
        add(cat, p)

expand_pronoun(
    patterns_bn=["‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡ßã","‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã","‡¶Ü‡¶ú ‡¶ï‡ßÄ ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶®","‡¶Ü‡¶ú ‡¶ï‡ßã‡¶•‡¶æ‡ßü","‡¶ï‡¶ñ‡¶® ‡¶Ü‡¶∏‡¶¨‡ßá","‡¶ö‡¶≤‡ßã ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶ï‡¶∞‡¶ø","‡¶ö‡¶æ ‡¶ñ‡ßá‡¶§‡ßá ‡¶Ø‡¶æ‡¶¨‡¶æ","‡¶è‡¶ñ‡¶® ‡¶´‡ßç‡¶∞‡¶ø ‡¶®‡¶æ‡¶ï‡¶ø","‡¶ï‡¶æ‡¶ú ‡¶ï‡ßá‡¶Æ‡¶® ‡¶ö‡¶≤‡¶õ‡ßá","‡¶Æ‡¶® ‡¶ï‡ßá‡¶Æ‡¶®","‡¶ò‡ßÅ‡¶Æ ‡¶•‡ßá‡¶ï‡ßá ‡¶â‡¶†‡ßá‡¶õ‡ßã?","‡¶¨‡¶æ‡¶∏‡¶æ‡ßü ‡¶Ü‡¶õ‡ßã?"],
    patterns_en=["{you} ki obostha","{you} kothay","{you} aj ki korbi","{you} kal free naki","{you} ki khawabi","{you} khelbi aj","{you} school jachho?","{you} office e naki","{you} raat e time dibi","{you} call nibi","{you} msg korbi?"],
    cat="mixed"
)

for tw in TIME_WORDS:
    add("time", f"{tw} kobe ashbi")
    add("doing", f"{tw} ki korcho")
    add("plan_invite", f"{tw} ber hobo")
    add("where", f"{tw} kothay thakbi")

for tw in TIME_WORDS_BN:
    add("time", f"{tw} ‡¶ï‡¶ñ‡¶® ‡¶Ü‡¶∏‡¶¨‡¶ø")
    add("doing", f"{tw} ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø‡¶∏")
    add("plan_invite", f"{tw} ‡¶¨‡ßá‡¶∞ ‡¶π‡¶¨‡ßã")
    add("where", f"{tw} ‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶•‡¶æ‡¶ï‡¶¨‡¶ø")

add("study", ["assignment sesh?","report likhso?","exam kemon holo","lab ache?","read korbi?","group study korbo?","sir class niben?","quiz hobe?","‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶ï‡¶¨‡ßá","‡¶™‡ßç‡¶∞‡ßá‡¶ú‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∂‡¶® ‡¶¨‡¶æ‡¶®‡¶æ‡¶á‡¶õ‡ßã?","‡¶®‡ßã‡¶ü ‡¶¶‡¶ø‡¶¨‡¶ø?"])
add("work", ["standup koi tay","deadline ase","jira ticket niye kaj","meeting ache?","leave niteso?","office jachho?","remote naki onsite","salary elo?","‡¶ï‡¶æ‡¶ú ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡ßá?","‡¶¨‡¶∏ ‡¶°‡ßá‡¶ï‡ßá‡¶õ‡ßá?","‡¶™‡ßá-‡¶∏‡ßç‡¶≤‡¶ø‡¶™ ‡¶™‡¶æ‡¶á‡¶õ‡ßã?"])
add("health", ["mon bhalo?","cold lagse?","jhor?","fever ase?"," ‡¶Æ‡¶æ‡¶•‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶•‡¶æ?","doctor dekhaso?","‡¶∂‡¶∞‡ßÄ‡¶∞ ‡¶ï‡ßá‡¶Æ‡¶®","‡¶ò‡ßÅ‡¶Æ ‡¶π‡¶á‡¶õ‡ßá?","gym jabi?"])
add("transport", ["uber dhorte parbi?","bus pabi?","train kobe","flight koto tay","jam koto","traffic onek","bike e jabi?","rickshaw nibi?","‡¶ó‡¶æ‡ßú‡¶ø ‡¶Ü‡¶õ‡ßá?","‡¶∏‡¶ø‡¶è‡¶®‡¶ú‡¶ø ‡¶ß‡¶∞‡¶¨‡¶ø?","‡¶¨‡¶æ‡¶∏‡¶æ‡ßü ‡¶®‡¶ø‡¶§‡ßá ‡¶Ü‡¶∏‡¶¨‡¶æ?"])
add("shopping", ["bazaar jabi?","kisu kinbi?","sale chalche?","shohag store e jabi?","dress nibo","shoe lagbe","gift nibo","book fair jabi?","‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶®‡¶æ‡¶ï‡¶ø ‡¶¶‡ßã‡¶ï‡¶æ‡¶®","‡¶ï‡ßÅ‡¶™‡¶® ‡¶Ü‡¶õ‡ßá?","‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ï‡¶¨‡ßá"])
add("sports", ["match dekhli?","gelam stadium?","cricket kemon holo","football aj","messi goal dil?","bd jitse?","ipl dekhbi?","practice korbi?","‡¶ú‡¶ø‡¶Æ‡ßá ‡¶ú‡¶æ‡¶∏?","‡¶ï‡ßã‡¶ö ‡¶°‡¶æ‡¶ï‡¶õ‡ßá?","‡¶∏‡ßç‡¶ï‡ßã‡¶∞ ‡¶ï‡¶§‡ßã"])

ASK_BANK = list(dict.fromkeys(ASK_BANK))

def sample_answers(cat, k=None):
    import random
    pool = random.choice(ANS.get(cat, [["ok"]]))
    out = list(dict.fromkeys(pool))
    if random.random() < 0.35:
        out.extend(random.choice(ANS.get(cat, [["ok"]]))[:2])
    if k is None:
        k = random.randint(3, 6)
    random.shuffle(out)
    return out[:k]

def make_ask(cat, text):
    t = text
    if not t.endswith(tuple("?!‡•§")):
        t = maybe_punc(t)
    t = maybe_emoji(t)
    t = bangla_or_banglish(t)
    return t

def make_pair():
    import random
    cat, text = random.choice(ASK_BANK)
    ask = make_ask(cat, text)
    ans = sample_answers(cat)
    out = []
    seen = set()
    for a in ans:
        a = bangla_or_banglish(a)
        if random.random() < 0.25:
            a = maybe_punc(a)
        if random.random() < 0.25:
            a = maybe_emoji(a)
        if a not in seen:
            out.append(a)
            seen.add(a)
    while len(out) < 3:
        out.append("ok")
    return {"ask": ask, "ans": out}

def generate(path, n=10000, as_array=False):
    count = 0
    if as_array:
        with open(path, "w", encoding="utf-8") as f:
            f.write("[")
            for i in range(n):
                obj = make_pair()
                if i > 0:
                    f.write(",")
                f.write(json.dumps(obj, ensure_ascii=False))
                count += 1
            f.write("]")
    else:
        with open(path, "w", encoding="utf-8") as f:
            for i in range(n):
                obj = make_pair()
                f.write(json.dumps(obj, ensure_ascii=False) + "\\n")
                count += 1
    return count

if __name__ == "__main__":
    import argparse
    ap = argparse.ArgumentParser()
    ap.add_argument("--out", type=str, default="chat_pairs.jsonl", help="output path (.jsonl or .json)")
    ap.add_argument("--n", type=int, default=100000, help="number of records")
    ap.add_argument("--array", action="store_true", help="write as a single JSON array instead of JSONL")
    args = ap.parse_args()
    generate(args.out, n=args.n, as_array=args.array)
''')